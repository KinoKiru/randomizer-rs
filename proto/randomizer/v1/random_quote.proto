syntax = "proto3";
package randomizer.v1;

import "google/protobuf/empty.proto";
// import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

// Generated according to https://cloud.google.com/apis/design/standard_methods
service TypeService {
  rpc ListTypes(ListTypesRequest) returns (ListTypesResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/Types"
    };
  }

  rpc GetType(GetTypeRequest) returns (Type) {
    option (google.api.http) = {
      get: "/v1alpha1/{name=Types/*}"
    };
  }

  rpc CreateType(CreateTypeRequest) returns (Type) {
    option (google.api.http) = {
      post: "/v1alpha1/Types"
      body: "Type"
    };
  }

  rpc UpdateType(UpdateTypeRequest) returns (Type) {
    option (google.api.http) = {
      patch: "/v1alpha1/{Type.name=Types/*}"
      body: "Type"
    };
  }

  rpc DeleteType(DeleteTypeRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1alpha1/{name=Types/*}"
    };
  }
}

message Type {
// ! This should be defined elsewere
}

message ListTypesRequest {
  // The parent resource name, for example, "shelves/shelf1"
  string parent = 1;

  // The maximum number of items to return.
  int32 page_size = 2;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
}

message ListTypesResponse {
  // The field name should match the noun "Type" in the method name.
  // There will be a maximum number of items returned based on the page_size field in the request.
  repeated Type Types = 1;

  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetTypeRequest {
  // The field will contain name of the resource requested.
  string name = 1;
}

message CreateTypeRequest {
  // The parent resource name where the Type is to be created.
  string parent = 1;

  // The Type id to use for this Type.
  string Type_id = 2;

  // The Type resource to create.
  // The field name should match the Noun in the method name.
  Type Type = 3;
}

message UpdateTypeRequest {
  // The Type resource which replaces the resource on the server.
  Type Type = 1;

  // The update mask applies to the resource. For the `FieldMask` definition,
  // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
}

message DeleteTypeRequest {
  // The resource name of the Type to be deleted.
  string name = 1;
}
